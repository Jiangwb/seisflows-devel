#!/usr/bin/env python

import os
import sys

def export(myenv):
    # exports comma delimited list of environment variables
    # e.g. VARNAME1=value1,VARNAME2=value2
    for item in myenv.split(','):
        os.environ.update([item.split('=')])

if __name__ == '__main__':


    nargs = len(sys.argv[1:])

    # parse command line arguments
    mypath = sys.argv[1]
    myclass = sys.argv[2]
    myfunc = sys.argv[3]
    #pythonpath = sys.argv[4:]

    #sys.path.append(pythonpath)

    if nargs == 4: 
        myenv = sys.argv[4].strip(',')
        export(myenv)

    from os.path import join
    from seisflows.tools.tools import loadobj
    #from seisflows.config import SeisflowsObjects, SeisflowsParameters, SeisflowsPaths
    from seisflows.config import load, custom_import

    #for obj in [SeisflowsParameters(), SeisflowsPaths(), SeisflowsObjects()]:
    #   obj.reload(mypath)

    # reload from last checkpoint
    load(mypath)

    #import system
    #custom_import('sovler',PAR.SOLVER)
    from seisflows.system.pbs_torque_sm import getnode

    if getnode() == 0:
        # load function arguments
        #kwargspath = join(mypath, 'SeisflowsObjects', myobj + '_kwargs')
        #kwargs = loadobj(join(kwargspath, myfunc + '.p'))
    	kwargspath = join(mypath, 'kwargs')
    	kwargs = loadobj(join(kwargspath, myclass+'_'+myfunc + '.p'))

        # call function
        #func = getattr(sys.modules[myobj], myfunc)
        #func(**kwargs)
    	func = getattr(sys.modules['seisflows_'+myclass], myfunc)
    	func(**kwargs)

